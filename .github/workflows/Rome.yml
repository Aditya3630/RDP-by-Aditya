      name: All-in-One Remote Desktop Server

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'

jobs:
  multi-rdp:
    name: Multi Remote Desktop Server
    runs-on: windows-latest
    timeout-minutes: 360
    env:
      MASTER_PASSWORD: "MultiRDP123"
    steps:
      - name: System Preparation
        shell: powershell
        run: |
          Write-Host "=== PREPARING MULTI-REMOTE SYSTEM ===" -ForegroundColor Cyan
          
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop" -ErrorAction SilentlyContinue
          $securePassword = ConvertTo-SecureString "${{ env.MASTER_PASSWORD }}" -AsPlainText -Force
          Set-LocalUser -Name "runneradmin" -Password $securePassword
          
          try {
            $publicIP = Invoke-RestMethod -Uri "https://api.ipify.org" -UseBasicParsing -TimeoutSec 10
            Write-Host "System IP: $publicIP" -ForegroundColor Green
            echo "SYSTEM_IP=$publicIP" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          } catch {
            echo "SYSTEM_IP=Check-GitHub-Logs" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          }

      - name: Setup AnyDesk
        shell: powershell
        run: |
          Write-Host "=== SETTING UP ANYDESK ===" -ForegroundColor Yellow
          
          try {
            Invoke-WebRequest -Uri "https://download.anydesk.com/AnyDesk.exe" -OutFile "AnyDesk.exe" -TimeoutSec 30
            Start-Process -FilePath "AnyDesk.exe" -ArgumentList "--install-service" -Wait -ErrorAction Stop
            Start-Process -FilePath "AnyDesk.exe" -ArgumentList "--start-service" -ErrorAction Stop
            Start-Sleep -Seconds 10
            
            & .\AnyDesk.exe --set-password "${{ env.MASTER_PASSWORD }}" 2>$null
            Start-Sleep -Seconds 5
            
            $anydeskId = & .\AnyDesk.exe --get-id 2>$null
            if ($anydeskId) {
              $anydeskId = $anydeskId.Trim()
              Write-Host "AnyDesk ID: $anydeskId" -ForegroundColor Green
              echo "ANYDESK_ID=$anydeskId" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
              echo "ANYDESK_STATUS=SUCCESS" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
            } else {
              throw "AnyDesk ID not retrieved"
            }
          } catch {
            Write-Host "AnyDesk setup failed" -ForegroundColor Red
            echo "ANYDESK_STATUS=FAILED" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          }

      - name: Setup RustDesk
        shell: powershell
        run: |
          Write-Host "=== SETTING UP RUSTDESK ===" -ForegroundColor Yellow
          
          try {
            $rustdeskUrl = "https://github.com/rustdesk/rustdesk/releases/latest/download/rustdesk-1.2.3-x86_64.exe"
            Invoke-WebRequest -Uri $rustdeskUrl -OutFile "rustdesk.exe" -TimeoutSec 30
            Start-Process -FilePath "rustdesk.exe" -ArgumentList "--service" -WindowStyle Hidden
            Start-Sleep -Seconds 15
            
            & .\rustdesk.exe --password "${{ env.MASTER_PASSWORD }}" 2>$null
            Start-Sleep -Seconds 5
            
            $rustdeskId = & .\rustdesk.exe --get-id 2>$null
            if ($rustdeskId) {
              $rustdeskId = $rustdeskId.Trim()
              Write-Host "RustDesk ID: $rustdeskId" -ForegroundColor Green
              echo "RUSTDESK_ID=$rustdeskId" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
              echo "RUSTDESK_STATUS=SUCCESS" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
            } else {
              throw "RustDesk ID not retrieved"
            }
          } catch {
            Write-Host "RustDesk setup failed" -ForegroundColor Red
            echo "RUSTDESK_STATUS=FAILED" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          }

      - name: Display Connection Information
        shell: powershell
        run: |
          Write-Host ""
          Write-Host "########################################################" -ForegroundColor Green
          Write-Host "#                                                      #" -ForegroundColor Green
          Write-Host "#           ALL-IN-ONE REMOTE DESKTOP READY            #" -ForegroundColor Green
          Write-Host "#                                                      #" -ForegroundColor Green
          Write-Host "########################################################" -ForegroundColor Green
          Write-Host ""
          
          Write-Host "SYSTEM DETAILS:" -ForegroundColor Cyan
          Write-Host "    System IP: $env:SYSTEM_IP" -ForegroundColor White
          Write-Host "    Master Password: ${{ env.MASTER_PASSWORD }}" -ForegroundColor White
          Write-Host "    Username: runneradmin" -ForegroundColor White
          Write-Host ""
          
          Write-Host "ANYDESK CONNECTION:" -ForegroundColor Blue
          if ($env:ANYDESK_STATUS -eq "SUCCESS") {
            Write-Host "    Status: ACTIVE" -ForegroundColor Green
            Write-Host "    ID: $env:ANYDESK_ID" -ForegroundColor Yellow
            Write-Host "    Password: ${{ env.MASTER_PASSWORD }}" -ForegroundColor Yellow
            Write-Host "    Download: https://anydesk.com/download" -ForegroundColor Cyan
          } else {
            Write-Host "    Status: FAILED" -ForegroundColor Red
          }
          Write-Host ""
          
          Write-Host "RUSTDESK CONNECTION:" -ForegroundColor DarkYellow
          if ($env:RUSTDESK_STATUS -eq "SUCCESS") {
            Write-Host "    Status: ACTIVE" -ForegroundColor Green
            Write-Host "    ID: $env:RUSTDESK_ID" -ForegroundColor Yellow
            Write-Host "    Password: ${{ env.MASTER_PASSWORD }}" -ForegroundColor Yellow
            Write-Host "    Download: https://rustdesk.com/download" -ForegroundColor Cyan
          } else {
            Write-Host "    Status: FAILED" -ForegroundColor Red
          }
          Write-Host ""
          
          Write-Host "WINDOWS RDP (ALWAYS AVAILABLE):" -ForegroundColor Green
          Write-Host "    Status: ACTIVE" -ForegroundColor Green
          Write-Host "    IP: $env:SYSTEM_IP:3389" -ForegroundColor Yellow
          Write-Host "    Username: runneradmin" -ForegroundColor Yellow
          Write-Host "    Password: ${{ env.MASTER_PASSWORD }}" -ForegroundColor Yellow
          Write-Host "    Use: Remote Desktop Connection (mstsc)" -ForegroundColor Cyan
          Write-Host ""
          Write-Host "########################################################" -ForegroundColor Green

      - name: Keep All Services Active
        shell: powershell
        run: |
          Write-Host "Starting keepalive for all remote desktop services..." -ForegroundColor Green
          Write-Host "All connection details are displayed above" -ForegroundColor Yellow
          Write-Host ""
          
          $startTime = Get-Date
          $maxDuration = New-TimeSpan -Hours 6
          $checkInterval = 300
          
          while ($true) {
            $currentTime = Get-Date
            $elapsed = $currentTime - $startTime
            
            if ($elapsed -gt $maxDuration) {
              Write-Host "Maximum session time (6 hours) reached. Ending session..." -ForegroundColor Red
              break
            }
            
            $remaining = $maxDuration - $elapsed
            $elapsedStr = "$($elapsed.Hours)h $($elapsed.Minutes)m"
            $remainingStr = "$($remaining.Hours)h $($remaining.Minutes)m"
            
            Write-Host "All Services Active | Elapsed: $elapsedStr | Remaining: $remainingStr" -ForegroundColor Green
            
            try {
              $rdpService = Get-Service -Name "TermService" -ErrorAction SilentlyContinue
              if ($rdpService.Status -ne "Running") {
                Start-Service -Name "TermService" -ErrorAction SilentlyContinue
              }
              
              $anydeskProcess = Get-Process -Name "AnyDesk" -ErrorAction SilentlyContinue
              if (-not $anydeskProcess -and (Test-Path "AnyDesk.exe")) {
                Start-Process -FilePath "AnyDesk.exe" -WindowStyle Hidden -ErrorAction SilentlyContinue
              }
              
              $rustdeskProcess = Get-Process -Name "rustdesk" -ErrorAction SilentlyContinue
              if (-not $rustdeskProcess -and (Test-Path "rustdesk.exe")) {
                Start-Process -FilePath "rustdesk.exe" -ArgumentList "--service" -WindowStyle Hidden -ErrorAction SilentlyContinue
              }
            } catch {
              # Continue even if service checks fail
            }
            
            Start-Sleep -Seconds $checkInterval
          }
          
          Write-Host "Session completed successfully" -ForegroundColor Green
